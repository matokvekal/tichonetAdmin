@using System.Web.Optimization
@using Business_Logic

<br />
<div class="header">
    <hr class="hr-thin" />
    <h4>Buses</h4>
    <div class="glyphicon glyphicon-chevron-up toggle" id="btToggleBuses"></div>
    <hr class="hr-thin" />
</div>
<div class="content" id="dBusesTable">
    <table id="grBuses"></table>
    <div id="pgBuses"></div>
</div>


@section scripts{
    @Scripts.Render("~/bundles/jqGrid")
    <script>
        var printWindow = null;
        $(function() {
            //Toggle buttons
            $("#btToggleBuses").click(function() {
                var cls = $("#btToggleBuses").attr("class");
                if (cls == "glyphicon glyphicon-chevron-up toggle") {
                    $("#btToggleBuses").attr("class", "glyphicon glyphicon-chevron-down toggle");
                } else {
                    $("#btToggleBuses").attr("class", "glyphicon glyphicon-chevron-up toggle");
                }
                $("#dBusesTable").toggle();
            });

            $("#grBuses").jqGrid({
                    url: '/api' + '@Url.Action("GetBuses", "Buses")',
                    datatype: "json",
                    loadonce: false,
                    height: "100%",
                    autowidth: true,
                    regional: "il",
                    hidegrid: false,
                    multiselect: false,
                    pager: "#pgBuses",
                    mtype: "get",
                    rowNum: 25,
                    rowList: [5, 25, 50, 100],
                    viewrecords: true,
                    ignoreCase: true,
                    loadui: "disable",
                    altRows: false,
                    sortable: true,
                    altclass: "ui-state-default",
                    editurl: '/api' + '@Url.Action("EditBus", "Buses")',
                    sortname: 'BusId',
                    sortorder: "asc",
                    colNames: ["Id", "BusId", "PlateNumber", "Owner", "seats", "price", "munifacturedate", "LicensingDueDate", "insuranceDueDate", "winterLicenseDueDate", "brakeTesDueDate", ""],
                    colModel: [
                        { name: "Id", index: 'Id', key: true, hidden: true, sortable: false, editable: false, edittype: "text", search: false },
                        { name: 'BusId', index: 'BusId', sorttype: "text", width: 90, editable: true },
                        { name: 'PlateNumber', index: 'PlateNumber', sorttype: "text", width: 110, editable: true },
                        //{ name: 'Owner', index: 'Owner', sorttype: "text", width: 110, editable: true, edittype: 'select', formatter: 'select', editoptions: { value: function () { return { '1': 'Owner 1', '2': 'Owner 2' } } } },

                        {
                            name: 'Owner', index: 'Owner', sorttype: "text", editable: true, edittype: "select", // formatter: "select",
                            editoptions: {
                                dataUrl: '/api' + '@Url.Action("GetBusCompanies", "Buses")',
                                buildSelect: function (data) {
                                    var response = jQuery.parseJSON(data);
                                    var s = '<select>';
                                    if (response && response.Data.length) {
                                        for (var i = 0, l = response.Data.length; i < l ; i++) {
                                            var ri = response.Data[i];
                                            s += '<option value="' + ri.pk + '">' + ri.companyName + '</option>';
                                        }
                                    }
                                    return s + "</select>";
                                }
                            }
                        },

                        { name: 'seats', index: 'seats', sorttype: "text", width: 60, editable: true, search: false, formatter: 'integer', sorttype: "int" },
                        { name: 'price', index: 'price', sorttype: "text", width: 80, editable: true, search: false, formatter: 'number', sorttype: "float" },
                        { name: 'munifacturedate', index: 'munifacturedate', width: 80, align: 'left', sortable: true, formatter: 'date', formatoptions: { srcformat: 'ISO8601Long', newformat: 'm/d/Y', defaultValue: null }, editable: true, edittype: 'text', editoptions: { size: 12, maxlengh: 12, dataInit: function (element) { $(element).datepicker({ dateFormat: 'mm/dd/yy' }); } }, editrules: { date: false }, search: false },
                        { name: 'LicensingDueDate', index: 'LicensingDueDate', width: 80, align: 'left', sortable: true, formatter: 'date', formatoptions: { srcformat: 'ISO8601Long', newformat: 'm/d/Y', defaultValue: null }, editable: true, edittype: 'text', editoptions: { size: 12, maxlengh: 12, dataInit: function (element) { $(element).datepicker({ dateFormat: 'mm/dd/yy' }); } }, editrules: { date: false }, search: false },
                        { name: 'insuranceDueDate', index: 'insuranceDueDate', width: 80, align: 'left', sortable: true, formatter: 'date', formatoptions: { srcformat: 'ISO8601Long', newformat: 'm/d/Y', defaultValue: null }, editable: true, edittype: 'text', editoptions: { size: 12, maxlengh: 12, dataInit: function (element) { $(element).datepicker({ dateFormat: 'mm/dd/yy' }); } }, editrules: { date: false }, search: false },
                        { name: 'winterLicenseDueDate', index: 'winterLicenseDueDate', width: 80, align: 'left', sortable: true, formatter: 'date', formatoptions: { srcformat: 'ISO8601Long', newformat: 'm/d/Y', defaultValue: null }, editable: true, edittype: 'text', editoptions: { size: 12, maxlengh: 12, dataInit: function (element) { $(element).datepicker({ dateFormat: 'mm/dd/yy' }); } }, editrules: { date: false }, search: false },
                        { name: 'brakeTesDueDate', index: 'brakeTesDueDate', width: 80, align: 'left', sortable: true, formatter: 'date', formatoptions: { srcformat: 'ISO8601Long', newformat: 'm/d/Y', defaultValue: null }, editable: true, edittype: 'text', editoptions: { size: 12, maxlengh: 12, dataInit: function (element) { $(element).datepicker({ dateFormat: 'mm/dd/yy' }); } }, editrules: { date: false }, search: false },
                        { name: 'ActionsBtn', index: 'ActionsBtn', width: 50, align: 'center', search: false, formatter: 'actions', formatoptions: { keys: true, editformbutton: true, editbutton: true, delbutton: true } },
                    ],
                })
                .navGrid('#pgBuses', {
                        edit: false,
                        add: false,
                        del: true,
                        deltitle: "@DictExpressionBuilderSystem.Translate("grid.DeleteRow")", //"Delete row",
                        refresh: true,
                        refreshtitle: "@DictExpressionBuilderSystem.Translate("grid.Reload")", //"Reload",
                        search: false,
                        view: false
                    } /*, {}, { closeAfterEdit: true }, { closeAfterAdd: true }*/
                )
                .inlineNav('#pgBuses', {
                        addtitle: "@DictExpressionBuilderSystem.Translate("grid.AddNewRow")", //"Add new row",
                        edittitle: "@DictExpressionBuilderSystem.Translate("grid.EditSelectedRow")", //"Edit selected row",
                        savetitle: "@DictExpressionBuilderSystem.Translate("grid.SaveRow")", //"Save row",
                        canceltitle: "@DictExpressionBuilderSystem.Translate("grid.CancelRowEditing")" //"Cancel row editing"
                    }
                )
                .navButtonAdd("#pgBuses", {
                        id: "print",
                        buttonicon: "ui-icon-print",
                        caption: "",
                        title: "@DictExpressionBuilderSystem.Translate("grid.Print")", //"Print"
                        onClickButton: function() {
                            var postData = $("#grBuses").jqGrid('getGridParam', 'postData');
                            var urlGetExcel = '/api' + "@Url.Action("GetPrint", "Buses")";
                            var url = urlGetExcel + "?" + $.param(postData);
                            if (printWindow == null || printWindow.closed) {
                                printWindow = window.open('', '', 'height=600,width=1000');
                            } else {
                                printWindow.focus();
                            }
                            $.ajax({
                                url: url,
                                type: 'GET',
                                dataType: 'json',
                                contentType: 'application/json; charset=utf-8',
                                success: function(data) {
                                    if (printWindow != undefined) {
                                        printWindow.document.clear();
                                        printWindow.document.write('<html><head><title>Buses</title>');
                                        printWindow.document.write('</head><body >');
                                        printWindow.document.write('<div class="page">');
                                        printWindow.document.write('<div class="subpage">');

                                        //TODO Draw Buses Table
                                        printWindow.document.write('test');
                                        printWindow.document.write(data);

                                        printWindow.document.write('</div>');
                                        printWindow.document.write('</div>');
                                        printWindow.document.write('</body></html>');
                                        printWindow.document.close();
                                        printWindow.print();
                                    }
                                }
                            });

                        }
                    }
                )
                .navButtonAdd("#pgBuses", {
                        id: "toExcel",
                        buttonicon: "ui-icon-disk",
                        caption: "",
                        title: "@DictExpressionBuilderSystem.Translate("grid.ToExcel")", //"To Excel"
                        onClickButton: function() {
                            var postData = $("#grBuses").jqGrid('getGridParam', 'postData');
                            var urlGetExcel = '/api' + "@Url.Action("GetExcel", "Buses")";
                            var url = urlGetExcel + "?" + $.param(postData);
                            window.location.href = url;
                        }
                    }
                )
                .filterToolbar({
                        stringResult: true,
                        enableClear: false
                    }
                );

            //Hide buttons "Clear search"
            $(".ui-search-clear").remove();
        })
    </script>
}