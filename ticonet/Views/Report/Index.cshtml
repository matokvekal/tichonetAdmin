@using Business_Logic

<table id="reportGrid"></table>
<div id="reportGridPager"></div>

<script>
    $(function () {
        var gridCont = $("#reportGrid")
        gridCont.jqGrid({
            caption: '@DictExpressionBuilderSystem.Translate("Line.GridCaption")',
            url: '/api' + '@Url.Action("GetLines", "LinesApi")',
            datatype: "json",
            sortname: 'LineName',
            sortorder: "asc",
            //altclass: "ui-state-default",
            viewrecords: true,
            loadonce: false,
            hidegrid: false,
            //multiselect: true,
            //rowNum: -1,
            colNames: [
                '@DictExpressionBuilderSystem.Translate("Line.Id")',
                '@DictExpressionBuilderSystem.Translate("Line.LineNumber")',
                '@DictExpressionBuilderSystem.Translate("Line.Sun")',
                '@DictExpressionBuilderSystem.Translate("Line.Mon")',
                '@DictExpressionBuilderSystem.Translate("Line.Tue")',
                '@DictExpressionBuilderSystem.Translate("Line.Wed")',
                '@DictExpressionBuilderSystem.Translate("Line.Thu")',
                '@DictExpressionBuilderSystem.Translate("Line.Fri")',
                '@DictExpressionBuilderSystem.Translate("Line.Sut")',
            ],
            colModel: [
                    { name: "Id", index: 'Id', key: true, hidden: false, sortable: false, editable: false, edittype: "text", search: false },
                    { name: 'LineNumber', index: 'LineNumber', sorttype: "text", width: 110, editable: false },
                    { name: 'Sun', index: 'Sun', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'Mon', index: 'Mon', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'Tue', index: 'Tue', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'Wed', index: 'Wed', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'Thu', index: 'Thu', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'Fri', index: 'Fri', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'Sut', index: 'Sut', sorttype: "text", width: 60, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
            ],
            //onSelectRow: function (id) {
            //    scheduleGrid.jqGrid().trigger('reloadGrid');
            //},
            //loadComplete: function () {
            //    $("#cb_" + this.id).click();
            //}
            width: "100%",
            height: "100%",
            rowNum: 2,
            subGrid: true, // set the subGrid property to true to show expand buttons for each row
            subGridRowExpanded: showChildGrid, // javascript function that will take care of showing the child grid
            subGridPostData: function (rowid, value, cmName) {
                alert("!" + rowid)
                return {
                    scheduleId: rowid
                }
            },
            pager: "#reportGridPager"
        })
        // the event handler on expanding parent row receives two parameters
        // the ID of the grid tow  and the primary key of the row
        function showChildGrid(parentRowID, parentRowKey) {
            var childGridID = parentRowID + "_table";
            var childGridPagerID = parentRowID + "_pager";

            // send the parent row primary key to the server so that we know which grid to show
            var childGridURL = parentRowKey + ".json";
            //childGridURL = childGridURL + "&parentRowID=" + encodeURIComponent(parentRowKey)

            // add a table and pager HTML elements to the parent grid row - we will render the child grid here
            $('#' + parentRowID).append('<table id=' + childGridID + '></table><div id=' + childGridPagerID + ' class=scroll></div>');

            $("#" + childGridID).jqGrid({
                url: '/api' + '@Url.Action("GetLineDetailedToRows", "LinesApi")',
                //mtype: "GET",
                datatype: "json",

                //page: 1,
                colModel: [
                    { name: 'name', index: 'name', width: 110, editable: false },
                    { name: 'val', index: 'val', width: 110, editable: false },
                ],
                loadonce: false,
                width: '100%',
                height: '100%',
            });
        }
    })
</script>

